package io.crocker.euler.problem2;

/**
 * Problem 2: Even Fibonacci Numbers
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
 * the first 10 terms will be:
 * 		1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * The sum of the even numbers is 44.
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
 * even-valued terms.
 * 
 * @author joshu
 *
 */
public class Problem2 {

	public static void main(String[] args) {
		Problem2 problem2 = new Problem2();
		
		System.out.println("x = 4000000: " + String.valueOf(problem2.EvenSumToX(4000000)));
	}
	
	public int EvenSumToX(int x) {
		int sum = 0;
		int last = 0;
		int next = 1;
		int fib_number;
		
		for (; (last + next) < x;) {
			fib_number = last + next;
			
			if (fib_number % 2 == 0) {
				sum += fib_number;
			}
			
			last = next;
			next = fib_number;
		}
		
		
		return sum;
		
	}

}
